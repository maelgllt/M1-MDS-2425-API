{
  "openapi": "3.0.0",
  "info": {
    "title": "HackR API - Maël GUILLOTEAU",
    "version": "1.0.0",
    "description": "TP API | HackR API - Maël GUILLOTEAU"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Get API status",
        "responses": {
          "200": {
            "description": "API is running",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/tools/email-check": {
      "get": {
        "summary": "Check if an email exists",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "description": "Email address to verify",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification result",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "email exists"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - email required"
          },
          "500": {
            "description": "Error while checking email"
          }
        }
      }
    },
    "/tools/password-check": {
      "get": {
        "summary": "Check if a password is common",
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "required": true,
            "description": "Password to check",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password check result",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "the password is current."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - password required"
          },
          "500": {
            "description": "Password verification error"
          }
        }
      }
    },
    "/tools/generate-password": {
      "get": {
        "summary": "Generate a secure random password",
        "parameters": [
          {
            "name": "length",
            "in": "query",
            "required": false,
            "description": "The length of the password to generate (default is 12, minimum is 8)",
            "schema": {
              "type": "integer",
              "minimum": 8,
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generated secure password",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Password: 8$^fJk92@B1"
                }
              }
            }
          },
          "400": {
            "description": "Invalid password length. Minimum 8 characters."
          }
        }
      }
    },
    "/tools/generate-identity": {
      "get": {
        "summary": "Generate a fake identity",
        "responses": {
          "200": {
            "description": "Generated fake identity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "address": {
                      "type": "string",
                      "example": "1234 Elm Street"
                    },
                    "city": {
                      "type": "string",
                      "example": "Somecity"
                    },
                    "country": {
                      "type": "string",
                      "example": "Somecountry"
                    },
                    "phone": {
                      "type": "string",
                      "example": "(123) 456-7890"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tools/domain-info": {
      "get": {
        "summary": "Retrieve information about subdomains for a given domain",
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "required": true,
            "description": "The domain name to retrieve subdomain information for",
            "schema": {
              "type": "string",
              "example": "mydigitalschool.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of subdomains for the given domain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "type": "string",
                      "example": "/v1/domain/mydigitalschool.com/subdomains"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "limit_reached": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "subdomain_count": {
                      "type": "integer",
                      "example": 7
                    },
                    "subdomains": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "www"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Domain name is required"
          },
          "500": {
            "description": "Error when retrieving sub-domains"
          }
        }
      }
    },
    "/tools/ddos": {
      "post": {
        "summary": "Simulate a DDoS attack by sending multiple requests to a target URL",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "targetUrl": {
                    "type": "string",
                    "description": "The target URL to which requests will be sent",
                    "example": "http://example.com"
                  },
                  "numberOfRequests": {
                    "type": "integer",
                    "description": "The number of requests to be sent to the target URL",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Simulation complete, results of the DDoS attack",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Simulation complete."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Request 1 sent to http://example.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Target URL and number of requests are required"
          },
          "500": {
            "description": "Error while sending requests"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "roleId": {
                    "type": "integer"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
            "201": {
              "description": "User created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
            }
          }
      }
    },
    "/login": {
      "post": {
        "summary": "Login a user and return an access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email of the user",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the user",
                    "example": "password123"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "you are logged in"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzM1OTIwMTU4fQ.tFTPS4Aq3nIkd6V60W9iJgCRnjUSzVHb2_XtGeIAZ1E"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email or Password is missing"
          },
          "401": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "Logout a user by invalidating their access token",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successful disconnection."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, missing or invalid token"
          }
        }
      }
    },
    "/tools/spammer": {
      "post": {
        "summary": "Send a specified number of spam emails to a given email address",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "mael.guilloteau@my-digital-school.org",
                    "description": "Email address to which the spam emails will be sent"
                  },
                  "subject": {
                    "type": "string",
                    "example": "Sujet du spam",
                    "description": "Subject of the spam email"
                  },
                  "text": {
                    "type": "string",
                    "example": "Contenu du spam",
                    "description": "Text content of the spam email"
                  },
                  "count": {
                    "type": "integer",
                    "example": 3,
                    "description": "Number of spam emails to be sent"
                  }
                },
                "required": ["email", "subject", "text", "count"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Emails successfully sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "3 emails successfully sent to mael.guilloteau@my-digital-school.org"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, all fields (email, subject, text, count) are required"
          },
          "500": {
            "description": "Internal server error when sending emails"
          }
        }
      }
    }
  }
}
